name: Docker build & push & sign

on:
  workflow_call:
    inputs:
      image:
        description: Image to be built and pushed
        type: string
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ inputs.image }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    outputs:
      digest: ${{ steps.build.outputs.digest }}
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.2.1
        with:
          buildkitd-flags: --debug

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/nascit-${{ env.IMAGE_NAME }}
          tags: |
            # type=sha,enable=true,priority=200,prefix=sha-,suffix=,format=short
            # branch event
            type=ref,enable=true,priority=100,prefix=nascit-,suffix=,event=branch

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3.2.0
        with:
          context: ${{ env.IMAGE_NAME }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          # tags: ghcr.io/${{ github.repository }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Checkov Action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          framework: dockerfile
          quiet: true
          soft_fail: true

  sign:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Install cosign
        uses: sigstore/cosign-installer@v2.8.1
        with:
          cosign-release: 'v1.13.1'
      - name: Sign the published Docker image
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: COSIGN_EXPERIMENTAL=1 echo "${{ needs.build.outputs.tags }}" | xargs -I {} cosign sign {}@${{ needs.build.outputs.digest }} \
              -a "repo=${{ github.repository }}" -a "workflow=${{ github.workflow }}" -a "ref=${{ github.sha }}" --verbose

